name: test-network

version: 1.0.0
channels:
  mychannel:
    orderers:
      - orderer.example.com
    peers:
      peer0.org1.example.com:
            # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
            # have the chaincode installed. The app can also use this property to decide which peers
            # to send the chaincode install request. Default: true
        endorsingPeer: true

            # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
            # installed. The app can also use this property to decide which peers to send the
            # chaincode install request. Default: true
        chaincodeQuery: true

            # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
            # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

            # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
            # produce events but the app typically only needs to connect to one to listen to events.
            # Default: true
        eventSource: true
        discover: true

        
      peer1.org1.example.com:      
        endorsingPeer: true      
        eventSource: true
        discover: true  

      peer2.org1.example.com:      
        endorsingPeer: true        
        eventSource: true
        discover: true 

      peer3.org1.example.com:      
        endorsingPeer: true      
        discover: true
        eventSource: true  
        

      peer4.org1.example.com: 
        endorsingPeer: true 
        eventSource: true
        discover: true

      peer5.org1.example.com: 
        endorsingPeer: true 
        eventSource: true
        discover: true

      peer6.org1.example.com: 
        endorsingPeer: true 
        eventSource: true
        discover: true

      peer7.org1.example.com: 
        endorsingPeer: false 
        eventSource: true
        discover: false

      peer8.org1.example.com: 
        endorsingPeer: false 
        eventSource: true
        discover: false
   


      peer0.org2.example.com:
            # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
            # have the chaincode installed. The app can also use this property to decide which peers
            # to send the chaincode install request. Default: true
        endorsingPeer: true

            # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
            # installed. The app can also use this property to decide which peers to send the
            # chaincode install request. Default: true
        chaincodeQuery: true

            # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
            # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

            # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
            # produce events but the app typically only needs to connect to one to listen to events.
            # Default: true
        eventSource: true
        discover: true
    

      
#
# list of participating organizations in this network
#
organizations:
  org1:
    mspid: Org1MSP
    peers:
      - peer0.org1.example.com
      - peer1.org1.example.com
      - peer2.org1.example.com
      - peer3.org1.example.com
      - peer4.org1.example.com
      - peer5.org1.example.com
      - peer6.org1.example.com
      - peer7.org1.example.com
      - peer8.org1.example.com
        
      

    certificateAuthorities:
      - ca.org1.example.com

  # the profile will contain public information about organizations other than the one it belongs to.
  # These are necessary information to make transaction lifecycles work, including MSP IDs and
  # peers with a public URL to send transaction proposals. The file will not contain private
  # information reserved for members of the organization, such as admin key and certificate,
  # fabric-ca registrar enroll ID and secret, etc.
  org2:
    mspid: Org2MSP
    peers:
      - peer0.org2.example.com
   
    certificateAuthorities:
      - ca.org2.example.com

  # Orderer Org name
  ordererorg:
      # Membership Service Provider ID for this organization
      mspID: "OrdererOrg"
#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#

#
orderers:
  orderer.example.com:
    url: grpcs://localhost:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer.example.com
      hostnameOverride: orderer.example.com
    tlsCACerts:
      # Certificate location absolute path
      path: /home/inlab/fabric-application/test-network/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

peers:
  peer0.org1.example.com:
    # this URL is used to send endorsement and query requests
    #url: peer0.org1.example.com:7051
    url: grpcs://localhost:7051
    grpcOptions: 
      ssl-target-name-override: peer0.org1.example.com
      hostnameOverride: peer0.org1.example.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      #keep-alive-time: 0s
      #keep-alive-timeout: 20s
      #keep-alive-permit: false
      #fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      #allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem

  peer1.org1.example.com:
    url: grpcs://localhost:8051
    grpcOptions:
      ssl-target-name-override: peer1.org1.example.com
      hostnameOverride: peer1.org1.example.com
    tlsCACerts:
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem

  peer2.org1.example.com:
    url: grpcs://localhost:11051
    grpcOptions:
      ssl-target-name-override: peer2.org1.example.com
      hostnameOverride: peer2.org1.example.com
    tlsCACerts:
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem

  peer3.org1.example.com:
    url: grpcs://localhost:12051
    grpcOptions:
      ssl-target-name-override: peer3.org1.example.com
      hostnameOverride: peer3.org1.example.com
    tlsCACerts:
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem
  
  peer4.org1.example.com:
    url: grpcs://localhost:13051
    grpcOptions:
      ssl-target-name-override: peer4.org1.example.com
      hostnameOverride: peer4.org1.example.com
    tlsCACerts:
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem

  peer5.org1.example.com:
    url: grpcs://localhost:14051
    grpcOptions:
      ssl-target-name-override: peer5.org1.example.com
      hostnameOverride: peer5.org1.example.com
    tlsCACerts:
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem
  
  peer6.org1.example.com:
    url: grpcs://localhost:15051
    grpcOptions:
      ssl-target-name-override: peer6.org1.example.com
      hostnameOverride: peer6.org1.example.com
    tlsCACerts:
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem
  
  peer7.org1.example.com:
    url: grpcs://localhost:16051
    grpcOptions:
      ssl-target-name-override: peer7.org1.example.com
      hostnameOverride: peer7.org1.example.com
    tlsCACerts:
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem
  
  peer8.org1.example.com:
    url: grpcs://localhost:17051
    grpcOptions:
      ssl-target-name-override: peer8.org1.example.com
      hostnameOverride: peer8.org1.example.com
    tlsCACerts:
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem

  peer0.org2.example.com:
    url: grpcs://localhost:9051
    grpcOptions:
      ssl-target-name-override: peer0.org2.example.com
      hostnameOverride: peer0.org2.example.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      #keep-alive-time: 0s
      #keep-alive-timeout: 20s
      #keep-alive-permit: false
      #fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      #allow-insecure: false

    tlsCACerts:
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org2.example.com/tlsca/tlsca.org2.example.com-cert.pem

certificateAuthorities:
  ca.org1.example.com:
    url: https://localhost:7054
    caName: ca-org1
    tlsCACerts:
      path: /home/inlab/fabric-application/test-network/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem

          
    httpOptions:
      verify: false
